/*******************************************************************      JM.h                                                    ****      Japanese Manager header                                 ****      V1.3    Feb. 2,1991 new                                 ****      V1.4    Jun.16,1991 bug fix                             ****      V1.5    Feb.21,1993 kana                                *******************************************************************/#pragma optimize -1#pragma noroot#include    <types.h>#include    <quickdraw.h>#define JM_VERSION      0x0105      /* version 1.5 official     */#define JM_TOOL_NUM     0x84        /* tool set number          */#define STD_TEXT        0xE01E04    /* original stdText vector  */#define FILE_BLK_SIZE   512         /* size of file block       */#define JMSYS_L0_PATH   "\p*/System/Japanese/JMGothic.08L0"                                    /* system L0 font name      */#define JMSYS_L1_PATH   "\p*/System/Japanese/JMGothic.08L1"                                    /* system L1 font name      */#define JMSYS_L2_PATH   "\p*/System/Japanese/JMGothic.08L2"                                    /* system L2 font name      */#define JM_HEAD_SIZE    12          /* J. font file header size */#define JM_GOTHIC       0x8401      /* system font family num.  */#define JMSYS_FNT_SIZE  8           /* system font size         */#define OFFSET_BIT_IMG  19l         /* offset bitImage field */ /* #005 */#define OFFSET_ROWWORD  18l         /* offset rowWord field  */ /* #005 */#define TEXT_BUF_SIZE   128         /* max. size of text buffer */#define ASCII_MAX       0x7F#define KANA_MIN        0xA1#define KANA_MAX        0xDF#define JMT_BLK_SIZE    94#define JMT_1ST_MIN     0xA000u#define JMT_1ST_MAX     0xFE00u#define JMT_2ND_MIN1    0x21#define JMT_2ND_MAX1    0x7E#define JMT_2ND_MIN2    0x80#define JMT_2ND_MAX2    0x9F#define JMT_MISS        0xA121u#define SJIS_BLK_SIZE   188#define SJIS_1ST_MIN1   0x8100u#define SJIS_1ST_MAX1   0x9F00u#define SJIS_1ST_MIN2   0xE000u#define SJIS_1ST_MAX2   0xEF00u#define SJIS_2ND_MIN1   0x40#define SJIS_2ND_MAX1   0x7E#define SJIS_2ND_MIN2   0x80#define SJIS_2ND_MAX2   0xFC#define SJIS_MISS       0x8140u#define SECTION_SIZE    94#define INDEX_ASCII     0x8000u#define INDEX_KANA      0x0000u#define INDEX_L0        SECTION_SIZE#define INDEX_L1        (SECTION_SIZE * 16)#define INDEX_L2        (SECTION_SIZE * 48)#define INDEX_L3        (SECTION_SIZE * 95)#define INDEX_MISS      0#define FSF_SPACE       0xFF        /* space                    */#define FSF_ASCII       0x80        /* missing                  */#define MAX_BITS        24#define JMERR           (JM_TOOL_NUM * 0x100)#define JMERR_NOT_IMP   (JMERR + 0xFF)  /* fn. not implemented  */#define JMERR_DUP_START (JMERR + 1)     /* already jm is active */#define JMERR_FAMLY_FND (JMERR + 2)     /* family not found     */#define JMERR_FONT_FND  (JMERR + 3)     /* font not found       */#define JMERR_FONT_MEM  (JMERR + 4)     /* font not in memory   */#define JMERR_BAD_FAMLY (JMERR + 5)     /* illegal family number*/#define JMERR_BAD_SIZE  (JMERR + 6)     /* illegal font size    */#define JMERR_BAD_LEVEL (JMERR + 7)     /* illegal font level   */#define JMERR_BAD_JMT   (JMERR + 8)     /* illegal JM text code */#define JMERR_BAD_SJIS  (JMERR + 9)     /* illegal s-JIS code   */#define JMERR_BAD_INDEX (JMERR + 0xA)   /* illegal index code   */typedef struct  JFont {                 /* Japanese font record */        Word    wversion;               /* version              */        Word    wfamily;                /* family               */        Word    wwidth;                 /* font width in pixel  */        Word    wheight;                /* font height in pixel */        Word    wfirst;                 /* first char. index    */        Word    wlast;                  /* last char. index     */        Handle  himage;                 /* bit image handle     */        Ptr     pimage;                 /* bit image poinder    */        Long    limgsize;               /* bit image size       */} JFont, *JFontPtr, **JFontHndl;typedef struct  JFolder {               /* font strike folder   */        Word    *pbitimage;              /* bit image base addr. */        Word    wrowwords;              /* bit image pitch      */} JFolder, *JFolderPtr, **JFolderHndl;extern Word         jmw_id;         /* user id for alloc memory */extern Word         jmw_error;      /* jm tool error code       */extern Word         jmw_active;     /* jm active (status) flug  */extern const Byte   jmba_to_alt[];  /* alt. jmt to index        */extern const Byte   jmba_to_jmt[];  /* index to native jmt      */extern const Word   jmwa_miss_img[];/* miss char image          */extern JFolder      jmr_sys_fsf;    /* system font strike folder*/extern Handle       jmh_sys_fsf;    /* system fsf handle        */extern JFont        jmr_sys_l0;     /* system l0 font           */extern JFont        jmr_sys_l1;     /* system l1 font           */extern JFont        jmr_sys_l2;     /* system l2 font           */extern Byte         jms_buffer[];   /* text buffer              */extern Word         jmw_1st;        /* wont 2nd code            */extern void         StartUp(void);extern void         ShutDown(void);extern Word         Version(void);extern Word         Status(void);extern Word         JMT2Index(Word);extern FontHndl     CheckFont(void);extern Word         ConvText(Byte *, Byte *, Word);extern void         CopyImage(JFolderPtr, Word, JFontPtr, Word);extern void         TransBits(Pointer, Pointer, Word, Word, Word);extern void         GetBits(Pointer, Word, Word, Pointer);extern void         SetBits(Pointer, Word, Word, Pointer);/* end of JM.h */