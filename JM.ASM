**************************************************************************       JM.asm                                                          **       Japanese Manager Init                                           **       V1.0    May  5,1990 new                                         **       V1.1    Aug. 5,1990 renew                                       **       V1.2    Spt. 2,1990 fixed 1.1 bugs                              **       V1.3    Jan.26,1991 renew                                       **       V1.5    Aug. 8,1992 bug fix                                     **************************************************************************                keep    JM                case    on                copy    2/AInclude/E16.Locator                copy    JM.equ                mcopy   JM.mac**************************************************************************       JM                                                              **       setup TPT                                                       **       V1.3    Jan.14,1990 renew                                       **************************************************************************JM              start                phb                phk                plb                sta     jmw_id                ph2     #sysTool                ph2     #JM_TOOL_NUM                ph4     #JMCallTable                _SetTSPtr                _SetDefaultTPT                plb                rtlJM              end**************************************************************************       Japanese manager bottleneck procedure vector                    **       V1.0    May   5,1990 new                                        **************************************************************************JMProc          start                jmp     >JMStdTextJMProc          end**************************************************************************       Standard bottleneck procedure vector                            **       V1.0    May   5,1990 new                                        **************************************************************************OrgProc         start                ds      4OrgProc         end**************************************************************************       JMStdText                                                       **       Draws specified Japanese text                                   ** input :dpw_draw_verb = kind of text                                   **        dpp_text2draw = pointer to original text buffer                **        dpw_text_len = text length                                     **        dpw_char2draw = character to draw                              ** work  :dpp_source                                                     **       V1.0 May  5,1990 new                                            **       V1.1 Aug.10,1990 renew                                          **       V1.3 Jan.15,1991 renew                                          **************************************************************************JMStdText       start                phb                phk                plb                jsl     CheckFont                lda     jmw_error                jne     exit                ; not Japanese font                jsl     Status                cmp     #0                jeq     exit                ; inactive                jsr     Conv2Text                lda     <dpw_text_len                cmp     #TEXT_BUF_SIZE                blt     s1                lda     #TEXT_BUF_SIZE-1s1              anop                pha                lda     <dpp_text2draw+2                pha                lda     <dpp_text2draw                pha                lda     #^jms_buffer                sta     <dpp_text2draw+2                pha                lda     #jms_buffer                sta     <dpp_text2draw                pha                jsl     ConvText                sta     <dpw_text_len                jsl     OrgProc                plb                rtlexit            anop                plb                jmp     OrgProcJMStdText       end**************************************************************************        Conv2Text                                                      **        C string and char. WO text NI convert                          **        V1.0 May  2,1990 new                                           **************************************************************************Conv2Text       start                phy                pha                lda     <dpw_draw_verb                jeq     isChar                cmp     #JMW_DRAW_TEXT                jeq     exitisCStr          short   m                ldy     #0lCStr           lda     [<dpp_text2draw],y                beq     bCStr                iny                bra     lCStrbCStr           long    m                sty     <dpw_text_len                lda     #JMW_DRAW_TEXT                sta     <dpw_draw_verb                bra     exitisChar          anop                tdc                clc                adc     #dpw_char2draw                sta     <dpp_text2draw                stz     <dpp_text2draw+2                lda     #1                sta     <dpw_text_len                lda     #JMW_DRAW_TEXT                sta     <dpw_draw_verbexit            anop                pla                ply                rtsConv2Text       end**************************************************************************       functon pointer table                                           **       V1.3    Jan.26,1991 renew                                       **************************************************************************JMCallTable     start                dc      i4'(theEnd-JMCallTable)/4'                dc      i4'JMBootInit-1'            #$01                dc      i4'JMStartUp-1'             #$02                dc      i4'JMShutDown-1'            #$03                dc      i4'JMVersion-1'             #$04                dc      i4'JMReset-1'               #$05                dc      i4'JMStatus-1'              #$06                dc      i4'JMReserve-1'             #$07                dc      i4'JMReserve-1'             #$08                dc      i4'JMGetSysFont-1'          #$09                dc      i4'JMReserve-1'             #$0A                dc      i4'JMReserve-1'             #$0B                dc      i4'JMReserve-1'             #$0C                dc      i4'JMJmt2Sjis-1'            #$0D                dc      i4'JMSjis2Jmt-1'            #$0EtheEnd          anopJMCallTable     end**************************************************************************       Initializes Japanese Manager; called only by the Tool Locator   **               - must not be called by an application                  **input :A = low-order word of entry in WAPT for tool                    **       Y = high-order word of entry in WAPT for tool                   **       X = function number and tool set number                         **output:A = error code                                                  **       CY= error flag                                                  **errors:None                                                            **       V1.3    Jan.26,1991 renew                                       **       V1.5    Aug. 8,1992 bug fix                                     **************************************************************************JMBootInit      start                phb                phk                plb                stz     jmw_active                jsl     StartUp                php                sei                lda     >STD_TEXT                sta     OrgProc                lda     >STD_TEXT+2                sta     OrgProc+2                lda     JMProc                sta     >STD_TEXT                lda     JMProc+2                sta     >STD_TEXT+2                plp                lda     #0                clc                plb                rtlJMBootInit      end**************************************************************************       Starts up the Japanese Manager for use by an application        **input :A = low-order word of entry in WAPT for tool                    **       Y = high-order word of entry in WAPT for tool                   **       X = function number and tool set number                         **output:A = error code                                                  **       CY= error flag                                                  **errors:JMERR_DUP_START                                                 **       V1.3    Jan.26,1991 renew                                       **************************************************************************JMStartUp       start                phb                                             sp(+1)                phk                                             sp(+2)                plb                                             sp(+1)                jsl     StartUp                lda     jmw_error                clc                beq     s1                secs1              anop                plb                                             sp(0)                rtlJMStartUp       end**************************************************************************       Shuts down the Japanese Manager when an application quits       **input :A = low-order word of entry in WAPT for tool                    **       Y = high-order word of entry in WAPT for tool                   **       X = function number and tool set number                         **output:A = error code                                                  **       CY= error flag                                                  **errors:None                                                            **       V1.3    Jan.26,1991 renew                                       **************************************************************************JMShutDown      start                phb                                             sp(+1)                phk                                             sp(+2)                plb                                             sp(+1)                jsl     ShutDown                lda     jmw_error                clc                beq     s1                secs1              anop                plb                                             sp(0)                rtlJMShutDown      end**************************************************************************       Returns the verision number of the Japanese Manager             **input :A = low-order word of entry in WAPT for tool                    **       Y = high-order word of entry in WAPT for tool                   **       X = function number and tool set number                         **output:A = error code                                                  **       CY= error flag                                                  **stack :| previos contents |                                            **       |------------------|                                            **return:|    w_version     | Word - Version number of Japanese Manager  **       |------------------|                                            **       |  rtl2   |  rtl2  | 3 bytes - return to caller                 **       |------------------|                                            **       |  rtl2   |  rtl1  | 3 bytes - return to Tool Locator           **       |------------------|                                            **       |  rtl1   |  rtl1  |                                            **       |------------------|                                            **       |                  |<- SP                                       **errors:None                                                            **       V1.3    Jan.26,1991 renew                                       **************************************************************************JMVersion       startrtl1            equ     1rtl2            equ     rtl1+3w_version       equ     rtl2+3                phb                                             sp(+1)                phk                                             sp(+2)                plb                                             sp(+1)                jsl     Version                sta     w_version+1,s                lda     jmw_error                clc                beq     s1                secs1              anop                plb                                             sp(0)                rtlJMVersion       end**************************************************************************       Resets the Japanese Manager; called only when system is reset   **               - must not be called by an application                  **input :A = low-order word of entry in WAPT for tool                    **       Y = high-order word of entry in WAPT for tool                   **       X = function number and tool set number                         **output:A = error code                                                  **       CY= error flag                                                  **errors:None                                                            **       V1.1    Aug.26,1990 renew                                       **************************************************************************JMReset         start                lda     #0                clc                rtlJMReset         end**************************************************************************       Indicates whether the Japanese Manager is active                **input :A = low-order word of entry in WAPT for tool                    **       Y = high-order word of entry in WAPT for tool                   **       X = function number and tool set number                         **output:A = error code                                                  **       CY= error flag                                                  **stack :| previos contents |                                            **       |------------------|                                            **return:|     w_active     | Word - BOOLEAN; TRUE if Japanese Manager   **       |------------------|            active, FALSE if inactive       **       |  rtl2   |  rtl2  | 3 bytes - return to caller                 **       |------------------|                                            **       |  rtl2   |  rtl1  | 3 bytes - return to Tool Locator           **       |------------------|                                            **       |  rtl1   |  rtl1  |                                            **       |------------------|                                            **       |                  |<- SP                                       **errors:None                                                            **       V1.1    Aug.26,1990 renew                                       **************************************************************************JMStatus        startrtl1            equ     1rtl2            equ     rtl1+3w_active        equ     rtl2+3                phb                                             sp(+1)                phk                                             sp(+2)                plb                                             sp(+1)                jsl     Status                sta     w_active+1,s                lda     jmw_error                clc                beq     s1                secs1              anop                plb                                             sp(0)                rtlJMStatus        end**************************************************************************       Not implemented                                                 **input :A = low-order word of entry in WAPT for tool                    **       Y = high-order word of entry in WAPT for tool                   **       X = function number and tool set number                         **output:A = error code (jmNotImpErr)                                    **       CY= error flag (set)                                            **errors:JMERR_NOT_IMP                                                   **       V1.3    Jan.26,1991 renew                                       **************************************************************************JMReserve       start                lda     #JMERR_NOT_IMP                sec                rtlJMReserve       end**************************************************************************       Returns a pointer to the Japanese system font record            **input :A = low-order word of entry in WAPT for tool                    **       Y = high-order word of entry in WAPT for tool                   **       X = function number and tool set number                         **output:A = error code                                                  **       CY= error flag                                                  **stack :| previos contents |                                            **       |------------------|                                            **       |                  |                                            **return:|--   p_jfont    --| Long - japanese font record pointer        **       |                  |                                            **       |------------------|                                            **       |      level       | Word - character set level (0, 1, or 2)    **       |------------------|                                            **       |  rtl2   |  rtl2  | 3 bytes - return to caller                 **       |------------------|                                            **       |  rtl2   |  rtl1  | 3 bytes - return to Tool Locator           **       |------------------|                                            **       |  rtl1   |  rtl1  |                                            **       |------------------|                                            **       |                  |<- SP                                       **errors:JMERR_BAD_LEVEL                                                 **       V1.3    Jan.26,1991 renew                                       **************************************************************************JMGetSysFont    startrtl1            equ     1rtl2            equ     rtl1+3w_level         equ     rtl2+3p_jfont         equ     w_level+2                phb                                             sp(+1)                phk                                             sp(+2)                plb                                             sp(+1)                lda     w_level+1,s                beq     level0                cmp     #1                beq     level1                cmp     #2                beq     level2                lda     #JMERR_BAD_LEVEL                sta     jmw_error                bra     exitlevel0          anop                lda     #<jmr_sys_l0                sta     p_jfont+1,s                lda     #^jmr_sys_l0                sta     p_jfont+2+1,s                bra     commonlevel1          anop                lda     #<jmr_sys_l1                sta     p_jfont+1,s                lda     #^jmr_sys_l1                sta     p_jfont+2+1,s                bra     commonlevel2          anop                lda     #<jmr_sys_l2                sta     p_jfont+1,s                lda     #^jmr_sys_l2                sta     p_jfont+2+1,scommon          anop                stz     jmw_errorexit            anop                plb                                             sp(0)                lda     rtl1+4,s                sta     rtl1+4+2,s                lda     rtl1+2,s                sta     rtl1+2+2,s                lda     rtl1,s                sta     rtl1+2,s                tsc                clc                adc     #2                tcs                lda     >jmw_error                clc                beq     no_error                secno_error        anop                rtlJMGetSysFont    end**************************************************************************       Takes a JM text code and produces a shifted JIS code            **input :A = low-order word of entry in WAPT for tool                    **       Y = high-order word of entry in WAPT for tool                   **       X = function number and tool set number                         **output:A = error code                                                  **       CY= error flag                                                  **stack :| previos contents |                                            **       |------------------|                                            **return:|      w_sjis      | Word - shifted JIS code                    **       |------------------|                                            **       |      w_jmt       | Word - Japanese Manager text code          **       |------------------|                                            **       |  rtl2   |  rtl2  | 3 bytes - return to caller                 **       |------------------|                                            **       |  rtl2   |  rtl1  | 3 bytes - return to Tool Locator           **       |------------------|                                            **       |  rtl1   |  rtl1  |                                            **       |------------------|                                            **       |                  |<- SP                                       **errors:JMERR_BAD_JMT                                                   **       V1.3    Jan.26,1991 renew                                       **************************************************************************JMJmt2Sjis      startrtl1            equ     1rtl2            equ     rtl1+3w_jmt           equ     rtl2+3w_sjis          equ     w_jmt+2                phb                                             sp(+1)                phk                                             sp(+2)                plb                                             sp(+1)                lda     w_jmt+1,s                pha                                             sp(+3)                jsl     Jmt2Sjis                                sp(+1)                sta     w_sjis+1,s                lda     rtl1+5,s                sta     rtl1+5+2,s                lda     rtl1+3,s                sta     rtl1+3+2,s                lda     rtl1+1,s                sta     rtl1+1+2,s                lda     jmw_error                clc                beq     s1                secs1              anop                plb                                             sp(0)                plx                                             sp(-2)                rtlJMJmt2Sjis      end**************************************************************************       Takes a shifted text code and produces a JM JIS code            **input :A = low-order word of entry in WAPT for tool                    **       Y = high-order word of entry in WAPT for tool                   **       X = function number and tool set number                         **output:A = error code                                                  **       CY= error flag                                                  **stack :| previos contents |                                            **       |------------------|                                            **return:|      w_jmt       | Word - Japanese Manager text code          **       |------------------|                                            **       |      w_sjis      | Word - shifted JIS code                    **       |------------------|                                            **       |  rtl2   |  rtl2  | 3 bytes - return to caller                 **       |------------------|                                            **       |  rtl2   |  rtl1  | 3 bytes - return to Tool Locator           **       |------------------|                                            **       |  rtl1   |  rtl1  |                                            **       |------------------|                                            **       |                  |<- SP                                       **errors:JMERR_BAD_SJIS                                                  **       V1.3    Jan.26,1991 renew                                       **************************************************************************JMSjis2Jmt      startrtl1            equ     1rtl2            equ     rtl1+3w_sjis          equ     rtl2+3w_jmt           equ     w_sjis+2                phb                                             sp(+1)                phk                                             sp(+2)                plb                                             sp(+1)                lda     w_sjis+1,s                pha                                             sp(+3)                jsl     Sjis2Jmt                                sp(+1)                sta     w_jmt+1,s                lda     rtl1+5,s                sta     rtl1+5+2,s                lda     rtl1+3,s                sta     rtl1+3+2,s                lda     rtl1+1,s                sta     rtl1+1+2,s                lda     jmw_error                clc                beq     s1                secs1              anop                plb                                             sp(0)                plx                                             sp(-2)                rtlJMSjis2Jmt      end