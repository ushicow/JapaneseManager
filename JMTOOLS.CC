/*******************************************************************      JMTools.cc                                              ****      Japanese Manager houskeepnig routines                   ****      V1.3    Feb. 2,1991 new                                 ****      V1.5    Aug. 8,1992 bug fix                             *******************************************************************/#pragma keep    "JMTools"#include        <types.h>#include        <memory.h>#include        <prodos.h>#include        "JM.h"void    StartUp(void);void    LoadJFont(JFontPtr, char *);/*******************************************************************      Starts up the Japanese Manager for use by an            ****      application                                             **** input:                                                       ****      None                                                    **** return:                                                      ****      None                                                    **** globals:                                                     ****      jmr_sys_l0 : system l0 font                             ****      jmr_sys_l1 : system l1 font                             ****      jmr_sys_l2 : system l2 font                             **** error:                                                       ****      JMERR_DUP_START                                         **** edition date comment                                         **** 1.3a    1202 new                                             **** 1.5     2808 bug fix                                         *******************************************************************/void    StartUp(void){        if (Status()) {            jmw_error = JMERR_DUP_START;        } else {            LoadJFont(&jmr_sys_l0, JMSYS_L0_PATH);            LoadJFont(&jmr_sys_l1, JMSYS_L1_PATH);            LoadJFont(&jmr_sys_l2, JMSYS_L2_PATH);            jmw_active = TRUE;            jmw_1st = 0;                                        /* #005 */            jmw_error = NULL;        }}/*==============================================================****      Load Japanese font                                      **** input:                                                       ****      char *s_jf_path : Japanese font full path name          **** output:                                                      ****      JFontPtr p_jfont : Japanese font record                 ****          p_jfont->himage = NULL; font can't load             **** return:                                                      ****      None                                                    **** globals:                                                     ****      jmw_id : user id                                        **** error:                                                       ****      Memory Manager errors                                   ****      ProDOS errors                                           **** edition date comment                                         **** 1.3a    1202 new                                             ****==============================================================*/void    LoadJFont(JFontPtr p_jfont, char *s_jf_path){        FileRec     r_file;             /* for file info        */        OpenRec     r_open;             /* for file             */        FileIORec   r_io;               /* for i/o              */        MarkRec     r_mark;             /* for skip font name   */        p_jfont->himage = NULL;        r_file.pathname = s_jf_path;        GET_FILE_INFO(&r_file);        if ((jmw_error = toolerror()) == NULL) {            p_jfont->himage = NewHandle(                    r_file.blocksUsed * FILE_BLK_SIZE,                    jmw_id, attrLocked | attrNoSpec | attrPage,                    NULL);            if ((jmw_error = toolerror()) == NULL) {                r_open.openPathname = s_jf_path;                OPEN(&r_open);                r_io.fileRefNum = r_open.openRefNum;                r_io.dataBuffer = (Ptr)p_jfont;                r_io.requestCount = JM_HEAD_SIZE;                READ(&r_io);                r_io.dataBuffer =  *(p_jfont->himage);                r_io.requestCount = r_file.blocksUsed                        * FILE_BLK_SIZE;                READ(&r_io);                p_jfont->limgsize = r_io.transferCount;                CLOSE(&r_open);                HUnlock(p_jfont->himage);                SetHandleSize(p_jfont->limgsize, p_jfont->himage);                HLock(p_jfont->himage);                p_jfont->pimage = *(p_jfont->himage);            }        }} /* end of LoadJFONT *//*******************************************************************      Shuts down the Japanese Manager when an application     ****      quit                                                    **** input:                                                       ****      None                                                    **** return:                                                      ****      None                                                    **** globals:                                                     ****      jmr_sys_l0 : system l0 font                             ****      jmr_sys_l1 : system l1 font                             ****      jmr_sys_l2 : system l2 font                             ****      jmw_active                                              **** error:                                                       ****      None                                                    **** edition date comment                                         **** 1.3a    1202 new                                             *******************************************************************/void    ShutDown(void){        if (Status()) {            if (jmr_sys_l0.himage != NULL) {                DisposeHandle(jmr_sys_l0.himage);            }            if (jmr_sys_l1.himage != NULL) {                DisposeHandle(jmr_sys_l1.himage);            }            if (jmr_sys_l2.himage != NULL) {                DisposeHandle(jmr_sys_l2.himage);            }            jmw_active = FALSE;        }        jmw_error = NULL;}/*******************************************************************      Returns the version number of the Japanese Manager      **** input:                                                       ****      None                                                    **** return:                                                      ****      Word : Current version number of Japanese Manage        **** error:                                                       ****      None                                                    **** edition date comment                                         **** 1.3a    1202 new                                             *******************************************************************/Word    Version(void){        jmw_error = NULL;        return JM_VERSION;}/*******************************************************************      Indicates whether the Japanese Manager is active        **** input:                                                       ****      None                                                    **** return:                                                      ****      Word : TRUE if JM active, FALSE if inactive             **** globals:                                                     ****      jmw_active                                              **** error:                                                       ****      None                                                    **** edition date comment                                         **** 1.3a    1202 new                                             *******************************************************************/Word    Status(void){        jmw_error = NULL;        return jmw_active;}